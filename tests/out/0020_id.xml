<?xml version="1.0"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude">
  <source xmlns:xi="http://www.w3.org/2001/XInclude">
    'use strict'; const bb = require('bluebird'), fs =
    bb.promisifyAll(require('fs')), path = require('path'), dentin =
    require('dentin'), State = require('../lib/state');
    process.chdir(__dirname); fs.readdirAsync(__dirname) .then((dir)
    =&gt; { dir.sort(); return bb.mapSeries(dir, (test) =&gt; { const
    m = test.match(/^0*(\d+)_(id|rfc)(_fail)?.*\.xml$/i); if (m) { var
    ret = new State({ step: [parseInt(m[1]) / 10, 49], input:
    path.join(__dirname, test), output: path.join(__dirname, "out",
    test), rfc: m[2] === 'rfc', id: m[2] === 'id' }) .run(); if (m[3])
    { ret = ret.then(_ =&gt; { var er = new Error('Expected error, but
    got success'); er.test = test; throw er; }, _ =&gt; { // expected.
    }) } else { ret.catch(er =&gt; { er.test = test; throw er; }) }
    return ret; } }) }) .catch(er =&gt; { console.log("failed", er
    &amp;&amp; er.test); if (er.msg) { console.log(er.msg); }
    process.exit(1); });
  </source>
</rfc>
